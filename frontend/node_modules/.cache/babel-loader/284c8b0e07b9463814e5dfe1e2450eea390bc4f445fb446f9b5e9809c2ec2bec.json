{"ast":null,"code":"var _jsxFileName = \"/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/WorkSession.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WorkSession({\n  tasks\n}) {\n  _s();\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isBreak, setIsBreak] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n\n  // Select/deselect tasks\n  const toggleSelect = taskId => {\n    setSelectedIds(prev => prev.includes(taskId) ? prev.filter(id => id !== taskId) : [...prev, taskId]);\n  };\n\n  // Get selected tasks\n  const selectedTasks = tasks.filter(task => selectedIds.includes(task.id));\n  const totalMinutes = selectedTasks.reduce((sum, task) => sum + Number(task.minutes || 0), 0);\n\n  // Start timer\n  const startSession = () => {\n    setIsRunning(true);\n    setIsBreak(false);\n    setSeconds(totalMinutes * 60);\n  };\n\n  // Timer logic\n  useEffect(() => {\n    if (!isRunning) return;\n    const interval = setInterval(() => {\n      setSeconds(prev => {\n        if (prev <= 1) {\n          clearInterval(interval);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  // Format time display\n  const formatTime = s => {\n    const mins = Math.floor(s / 60);\n    const secs = s % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Break logic\n  const startBreak = () => {\n    setIsBreak(true);\n    setSeconds(300); // 5 min break\n    setIsRunning(true);\n  };\n  const endSession = () => {\n    setIsRunning(false);\n    setSelectedIds([]);\n    setSeconds(0);\n    setIsBreak(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '40px',\n      padding: '20px',\n      border: '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Work Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !isRunning && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedIds.includes(task.id),\n              onChange: () => toggleSelect(task.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), task.title, \" - \", task.minutes, \" min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 14\n        }, this), \" \", totalMinutes, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSession,\n        disabled: selectedIds.length === 0,\n        children: \"Start Work Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isBreak ? 'Break Time ⏸️' : 'Working ⏱️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: formatTime(seconds)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), !isBreak && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startBreak,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Take Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endSession,\n        children: \"End Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkSession, \"aQoG3oGnPgT7Kxdx4v9NMlsyp28=\");\n_c = WorkSession;\nexport default WorkSession;\nvar _c;\n$RefreshReg$(_c, \"WorkSession\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkSession","tasks","_s","selectedIds","setSelectedIds","isRunning","setIsRunning","isBreak","setIsBreak","seconds","setSeconds","toggleSelect","taskId","prev","includes","filter","id","selectedTasks","task","totalMinutes","reduce","sum","Number","minutes","startSession","interval","setInterval","clearInterval","formatTime","s","mins","Math","floor","secs","toString","padStart","startBreak","endSession","style","marginTop","padding","border","children","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","map","type","checked","onChange","title","onClick","disabled","length","marginRight","_c","$RefreshReg$"],"sources":["/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/WorkSession.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction WorkSession({ tasks }) {\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isBreak, setIsBreak] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n\n  // Select/deselect tasks\n  const toggleSelect = (taskId) => {\n    setSelectedIds((prev) =>\n      prev.includes(taskId)\n        ? prev.filter((id) => id !== taskId)\n        : [...prev, taskId]\n    );\n  };\n\n  // Get selected tasks\n  const selectedTasks = tasks.filter((task) =>\n    selectedIds.includes(task.id)\n  );\n  const totalMinutes = selectedTasks.reduce(\n    (sum, task) => sum + Number(task.minutes || 0),\n    0\n  );\n\n  // Start timer\n  const startSession = () => {\n    setIsRunning(true);\n    setIsBreak(false);\n    setSeconds(totalMinutes * 60);\n  };\n\n  // Timer logic\n  useEffect(() => {\n    if (!isRunning) return;\n\n    const interval = setInterval(() => {\n      setSeconds((prev) => {\n        if (prev <= 1) {\n          clearInterval(interval);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  // Format time display\n  const formatTime = (s) => {\n    const mins = Math.floor(s / 60);\n    const secs = s % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Break logic\n  const startBreak = () => {\n    setIsBreak(true);\n    setSeconds(300); // 5 min break\n    setIsRunning(true);\n  };\n\n  const endSession = () => {\n    setIsRunning(false);\n    setSelectedIds([]);\n    setSeconds(0);\n    setIsBreak(false);\n  };\n\n  return (\n    <div style={{ marginTop: '40px', padding: '20px', border: '1px solid #ccc' }}>\n      <h2>Work Session</h2>\n\n      {!isRunning && (\n        <>\n          <ul style={{ textAlign: 'left' }}>\n            {tasks.map((task) => (\n              <li key={task.id}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedIds.includes(task.id)}\n                    onChange={() => toggleSelect(task.id)}\n                  />\n                  {task.title} - {task.minutes} min\n                </label>\n              </li>\n            ))}\n          </ul>\n          <p><strong>Total Time:</strong> {totalMinutes} minutes</p>\n          <button onClick={startSession} disabled={selectedIds.length === 0}>\n            Start Work Session\n          </button>\n        </>\n      )}\n\n      {isRunning && (\n        <div>\n          <h3>{isBreak ? 'Break Time ⏸️' : 'Working ⏱️'}</h3>\n          <h1>{formatTime(seconds)}</h1>\n          {!isBreak && (\n            <button onClick={startBreak} style={{ marginRight: '10px' }}>\n              Take Break\n            </button>\n          )}\n          <button onClick={endSession}>End Session</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WorkSession;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}