{"ast":null,"code":"var _jsxFileName = \"/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Helper to get all days in a month\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDaysInMonth = (year, month) => {\n  const date = new Date(year, month, 1);\n  const days = [];\n  while (date.getMonth() === month) {\n    days.push(new Date(date));\n    date.setDate(date.getDate() + 1);\n  }\n  return days;\n};\nfunction Calendar({\n  tasks = []\n}) {\n  _s();\n  const today = new Date();\n  const [currentMonth, setCurrentMonth] = useState(today.getMonth());\n  const [currentYear, setCurrentYear] = useState(today.getFullYear());\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n\n  // Group tasks by due date\n  const taskMap = tasks.reduce((map, task) => {\n    const date = new Date(task.dueDate);\n    const key = date.toISOString().split('T')[0]; // Always yyyy-mm-dd\n    if (!map[key]) map[key] = [];\n    map[key].push(task);\n    return map;\n  }, {});\n  const handlePrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(prev => prev - 1);\n    } else {\n      setCurrentMonth(prev => prev - 1);\n    }\n  };\n  const handleNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(prev => prev + 1);\n    } else {\n      setCurrentMonth(prev => prev + 1);\n    }\n  };\n  const monthName = new Date(currentYear, currentMonth).toLocaleString('default', {\n    month: 'long'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevMonth,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \"\\xA0 \", monthName, \" \", currentYear, \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextMonth,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gap: 10,\n        marginTop: 20\n      },\n      children: [['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          textAlign: 'center'\n        },\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)), Array(daysInMonth[0].getDay()).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {}, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), daysInMonth.map(date => {\n        const dateStr = date.toISOString().split('T')[0];\n        const dayTasks = taskMap[dateStr] || [];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid #ccc',\n            borderRadius: 6,\n            padding: 8,\n            minHeight: 80,\n            backgroundColor: '#f9f9f9'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: 'none',\n              paddingLeft: 5,\n              fontSize: 12,\n              marginTop: 5\n            },\n            children: dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", task.title]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, dateStr, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"HJkc0PhfA/wS/XQ9VsSdFqcT3FA=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","getDaysInMonth","year","month","date","Date","days","getMonth","push","setDate","getDate","Calendar","tasks","_s","today","currentMonth","setCurrentMonth","currentYear","setCurrentYear","getFullYear","daysInMonth","taskMap","reduce","map","task","dueDate","key","toISOString","split","handlePrevMonth","prev","handleNextMonth","monthName","toLocaleString","style","padding","children","textAlign","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","marginTop","day","fontWeight","Array","getDay","fill","_","i","dateStr","dayTasks","border","borderRadius","minHeight","backgroundColor","listStyle","paddingLeft","fontSize","title","id","_c","$RefreshReg$"],"sources":["/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// Helper to get all days in a month\nconst getDaysInMonth = (year, month) => {\n  const date = new Date(year, month, 1);\n  const days = [];\n\n  while (date.getMonth() === month) {\n    days.push(new Date(date));\n    date.setDate(date.getDate() + 1);\n  }\n\n  return days;\n};\n\nfunction Calendar({ tasks = [] }) {\n  const today = new Date();\n  const [currentMonth, setCurrentMonth] = useState(today.getMonth());\n  const [currentYear, setCurrentYear] = useState(today.getFullYear());\n\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n\n  // Group tasks by due date\n  const taskMap = tasks.reduce((map, task) => {\n    const date = new Date(task.dueDate);\n    const key = date.toISOString().split('T')[0];  // Always yyyy-mm-dd\n    if (!map[key]) map[key] = [];\n    map[key].push(task);\n    return map;\n  }, {});\n\n  const handlePrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(prev => prev - 1);\n    } else {\n      setCurrentMonth(prev => prev - 1);\n    }\n  };\n\n  const handleNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(prev => prev + 1);\n    } else {\n      setCurrentMonth(prev => prev + 1);\n    }\n  };\n\n  const monthName = new Date(currentYear, currentMonth).toLocaleString('default', { month: 'long' });\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2 style={{ textAlign: 'center' }}>\n        <button onClick={handlePrevMonth}>&lt;</button>\n        &nbsp; {monthName} {currentYear} &nbsp;\n        <button onClick={handleNextMonth}>&gt;</button>\n      </h2>\n\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gap: 10,\n        marginTop: 20\n      }}>\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n          <div key={day} style={{ fontWeight: 'bold', textAlign: 'center' }}>{day}</div>\n        ))}\n\n        {/* Empty slots before the 1st of the month */}\n        {Array(daysInMonth[0].getDay()).fill(null).map((_, i) => (\n          <div key={`empty-${i}`} />\n        ))}\n\n        {daysInMonth.map(date => {\n          const dateStr = date.toISOString().split('T')[0];\n          const dayTasks = taskMap[dateStr] || [];\n\n          return (\n            <div key={dateStr} style={{\n              border: '1px solid #ccc',\n              borderRadius: 6,\n              padding: 8,\n              minHeight: 80,\n              backgroundColor: '#f9f9f9',\n            }}>\n              <strong>{date.getDate()}</strong>\n              <ul style={{ listStyle: 'none', paddingLeft: 5, fontSize: 12, marginTop: 5 }}>\n                {dayTasks.map(task => (\n                  <li key={task.id}>â€¢ {task.title}</li>\n                ))}\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}