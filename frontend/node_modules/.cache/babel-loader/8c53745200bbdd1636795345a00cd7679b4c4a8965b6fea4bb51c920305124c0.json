{"ast":null,"code":"var _jsxFileName = \"/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/WorkSession.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkSession({\n  tasks = []\n}) {\n  _s();\n  const [selectedOrder, setSelectedOrder] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [newBreakDuration, setNewBreakDuration] = useState(5);\n  const toggleTask = task => {\n    const alreadySelected = selectedOrder.find(item => item.type === 'task' && item.id === task.id);\n    if (alreadySelected) {\n      setSelectedOrder(prev => prev.filter(item => !(item.type === 'task' && item.id === task.id)));\n    } else {\n      setSelectedOrder(prev => [...prev, {\n        ...task,\n        type: 'task'\n      }]);\n    }\n  };\n  const getDueClass = dueDateStr => {\n    if (!dueDateStr) return '';\n    const today = new Date();\n    const due = new Date(dueDateStr);\n    today.setHours(0, 0, 0, 0);\n    due.setHours(0, 0, 0, 0);\n    const diff = (due - today) / (1000 * 60 * 60 * 24);\n    if (diff < 0) return 'due-today'; // overdue or today\n    if (diff === 0) return 'due-today';\n    if (diff <= 3) return 'due-soon';\n    return 'due-later';\n  };\n  const addBreakAfter = index => {\n    const breakItem = {\n      type: 'break',\n      title: `${newBreakDuration}-minute break`,\n      minutes: newBreakDuration\n    };\n    const updated = [...selectedOrder];\n    updated.splice(index + 1, 0, breakItem);\n    setSelectedOrder(updated);\n  };\n  const startSession = () => {\n    if (selectedOrder.length === 0) return;\n    setIsRunning(true);\n    setCurrentIndex(0);\n    setSeconds(selectedOrder[0].minutes * 60);\n  };\n  useEffect(() => {\n    if (!isRunning) return;\n    const interval = setInterval(() => {\n      setSeconds(prev => {\n        if (prev <= 1) {\n          clearInterval(interval);\n          if (currentIndex + 1 < selectedOrder.length) {\n            const next = selectedOrder[currentIndex + 1];\n            setCurrentIndex(i => i + 1);\n            setSeconds(next.minutes * 60);\n          } else {\n            setIsRunning(false);\n            setCurrentIndex(0);\n            setSeconds(0);\n          }\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isRunning, seconds, currentIndex, selectedOrder]);\n  const formatTime = s => {\n    const m = Math.floor(s / 60);\n    const sec = s % 60;\n    return `${m}:${sec.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      backgroundColor: '#f7f7f7',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: 30\n      },\n      children: \"Work Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 800,\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(220px, 1fr))',\n          gap: 15,\n          marginBottom: 30\n        },\n        children: tasks.map(task => {\n          const selected = selectedOrder.some(item => item.type === 'task' && item.id === task.id);\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            className: getDueClass(task.dueDate),\n            style: {\n              border: '1px solid #ccc',\n              borderRadius: 8,\n              padding: 15,\n              backgroundColor: selected ? '#d0f0fd' : 'white',\n              cursor: 'pointer',\n              userSelect: 'none',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              gap: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selected,\n              onChange: () => toggleTask(task),\n              style: {\n                alignSelf: 'flex-start'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [task.minutes, \" min\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Due: \", task.dueDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Session Order:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          paddingLeft: 0,\n          maxWidth: 600,\n          margin: 'auto'\n        },\n        children: selectedOrder.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            border: '1px solid #aaa',\n            borderRadius: 6,\n            padding: 12,\n            marginBottom: 12,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            backgroundColor: item.type === 'task' ? '#f0ead8' : '#e8f4fd'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.type === 'task' ? 'Task:' : 'Break:'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), \" \", item.title, \" \\u2014 \", item.minutes, \" min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), item.type === 'task' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addBreakAfter(i),\n            style: {\n              backgroundColor: '#4CAF50',\n              border: 'none',\n              borderRadius: 4,\n              color: 'white',\n              padding: '6px 10px',\n              cursor: 'pointer'\n            },\n            children: \"+ Add Break After\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: 600,\n          margin: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: 10\n          },\n          children: [\"Break duration (min):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newBreakDuration,\n            onChange: e => setNewBreakDuration(Number(e.target.value)),\n            min: 1,\n            style: {\n              width: 60,\n              padding: 6,\n              marginLeft: 10,\n              borderRadius: 4,\n              border: '1px solid #ccc'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginTop: 15,\n            width: '100%',\n            padding: 14,\n            fontSize: 16,\n            backgroundColor: '#007bff',\n            border: 'none',\n            borderRadius: 6,\n            color: 'white',\n            cursor: 'pointer'\n          },\n          onClick: startSession,\n          disabled: selectedOrder.length === 0,\n          children: \"Start Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), isRunning && selectedOrder[currentIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 600,\n        margin: '40px auto',\n        padding: 30,\n        borderRadius: 8,\n        backgroundColor: '#fff',\n        boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedOrder[currentIndex].type === 'task' ? `Task: ${selectedOrder[currentIndex].title}` : `Break: ${selectedOrder[currentIndex].title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: 90,\n          margin: '20px 0'\n        },\n        children: formatTime(seconds)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Step \", currentIndex + 1, \" of \", selectedOrder.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkSession, \"3BRSh/5t27LnFln7QbjbGuf0gyg=\");\n_c = WorkSession;\nexport default WorkSession;\nvar _c;\n$RefreshReg$(_c, \"WorkSession\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WorkSession","tasks","_s","selectedOrder","setSelectedOrder","isRunning","setIsRunning","currentIndex","setCurrentIndex","seconds","setSeconds","newBreakDuration","setNewBreakDuration","toggleTask","task","alreadySelected","find","item","type","id","prev","filter","getDueClass","dueDateStr","today","Date","due","setHours","diff","addBreakAfter","index","breakItem","title","minutes","updated","splice","startSession","length","interval","setInterval","clearInterval","next","i","formatTime","s","m","Math","floor","sec","toString","padStart","style","padding","backgroundColor","minHeight","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","display","gridTemplateColumns","gap","map","selected","some","className","dueDate","border","borderRadius","cursor","userSelect","flexDirection","alignItems","checked","onChange","alignSelf","listStyleType","paddingLeft","justifyContent","onClick","color","value","e","Number","target","min","width","marginLeft","marginTop","fontSize","disabled","boxShadow","_c","$RefreshReg$"],"sources":["/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/WorkSession.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction WorkSession({ tasks = [] }) {\n  const [selectedOrder, setSelectedOrder] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [newBreakDuration, setNewBreakDuration] = useState(5);\n\n  const toggleTask = (task) => {\n    const alreadySelected = selectedOrder.find(item => item.type === 'task' && item.id === task.id);\n    if (alreadySelected) {\n      setSelectedOrder(prev => prev.filter(item => !(item.type === 'task' && item.id === task.id)));\n    } else {\n      setSelectedOrder(prev => [...prev, { ...task, type: 'task' }]);\n    }\n  };\n\n  const getDueClass = (dueDateStr) => {\n    if (!dueDateStr) return '';\n    const today = new Date();\n    const due = new Date(dueDateStr);\n    today.setHours(0,0,0,0);\n    due.setHours(0,0,0,0);\n    const diff = (due - today) / (1000*60*60*24);\n\n    if (diff < 0) return 'due-today';   // overdue or today\n    if (diff === 0) return 'due-today';\n    if (diff <= 3) return 'due-soon';\n    return 'due-later';\n  };\n\n  const addBreakAfter = (index) => {\n    const breakItem = {\n      type: 'break',\n      title: `${newBreakDuration}-minute break`,\n      minutes: newBreakDuration,\n    };\n    const updated = [...selectedOrder];\n    updated.splice(index + 1, 0, breakItem);\n    setSelectedOrder(updated);\n  };\n\n  const startSession = () => {\n    if (selectedOrder.length === 0) return;\n    setIsRunning(true);\n    setCurrentIndex(0);\n    setSeconds(selectedOrder[0].minutes * 60);\n  };\n\n  useEffect(() => {\n    if (!isRunning) return;\n\n    const interval = setInterval(() => {\n      setSeconds(prev => {\n        if (prev <= 1) {\n          clearInterval(interval);\n          if (currentIndex + 1 < selectedOrder.length) {\n            const next = selectedOrder[currentIndex + 1];\n            setCurrentIndex(i => i + 1);\n            setSeconds(next.minutes * 60);\n          } else {\n            setIsRunning(false);\n            setCurrentIndex(0);\n            setSeconds(0);\n          }\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [isRunning, seconds, currentIndex, selectedOrder]);\n\n  const formatTime = (s) => {\n    const m = Math.floor(s / 60);\n    const sec = s % 60;\n    return `${m}:${sec.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div style={{ padding: 20, backgroundColor: '#f7f7f7', minHeight: '100vh' }}>\n      <h2 style={{ textAlign: 'center', marginBottom: 30 }}>Work Session</h2>\n\n      {!isRunning && (\n        <div style={{ maxWidth: 800, margin: 'auto' }}>\n          <h3>Select Tasks:</h3>\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(220px, 1fr))',\n              gap: 15,\n              marginBottom: 30,\n            }}\n          >\n            {tasks.map(task => {\n              const selected = selectedOrder.some(item => item.type === 'task' && item.id === task.id);\n              return (\n                <label\n                  key={task.id}\n                  className={getDueClass(task.dueDate)}\n                  style={{\n                    border: '1px solid #ccc',\n                    borderRadius: 8,\n                    padding: 15,\n                    backgroundColor: selected ? '#d0f0fd' : 'white',\n                    cursor: 'pointer',\n                    userSelect: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'flex-start',\n                    gap: 8,\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selected}\n                    onChange={() => toggleTask(task)}\n                    style={{ alignSelf: 'flex-start' }}\n                  />\n                  <strong>{task.title}</strong>\n                  <span>{task.minutes} min</span>\n                  <span>Due: {task.dueDate}</span>\n                </label>\n              );\n            })}\n          </div>\n\n          <h4>Session Order:</h4>\n          <ul style={{ listStyleType: 'none', paddingLeft: 0, maxWidth: 600, margin: 'auto' }}>\n            {selectedOrder.map((item, i) => (\n              <li\n                key={i}\n                style={{\n                  border: '1px solid #aaa',\n                  borderRadius: 6,\n                  padding: 12,\n                  marginBottom: 12,\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  backgroundColor: item.type === 'task' ? '#f0ead8' : '#e8f4fd',\n                }}\n              >\n                <div>\n                  <strong>{item.type === 'task' ? 'Task:' : 'Break:'}</strong> {item.title} — {item.minutes} min\n                </div>\n                {item.type === 'task' && (\n                  <button\n                    onClick={() => addBreakAfter(i)}\n                    style={{\n                      backgroundColor: '#4CAF50',\n                      border: 'none',\n                      borderRadius: 4,\n                      color: 'white',\n                      padding: '6px 10px',\n                      cursor: 'pointer',\n                    }}\n                  >\n                    + Add Break After\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n\n          <div style={{ maxWidth: 600, margin: 'auto' }}>\n            <label style={{ display: 'block', marginBottom: 10 }}>\n              Break duration (min):\n              <input\n                type=\"number\"\n                value={newBreakDuration}\n                onChange={e => setNewBreakDuration(Number(e.target.value))}\n                min={1}\n                style={{\n                  width: 60,\n                  padding: 6,\n                  marginLeft: 10,\n                  borderRadius: 4,\n                  border: '1px solid #ccc',\n                }}\n              />\n            </label>\n\n            <button\n              style={{\n                marginTop: 15,\n                width: '100%',\n                padding: 14,\n                fontSize: 16,\n                backgroundColor: '#007bff',\n                border: 'none',\n                borderRadius: 6,\n                color: 'white',\n                cursor: 'pointer',\n              }}\n              onClick={startSession}\n              disabled={selectedOrder.length === 0}\n            >\n              Start Session\n            </button>\n          </div>\n        </div>\n      )}\n\n      {isRunning && selectedOrder[currentIndex] && (\n        <div\n          style={{\n            maxWidth: 600,\n            margin: '40px auto',\n            padding: 30,\n            borderRadius: 8,\n            backgroundColor: '#fff',\n            boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n            textAlign: 'center',\n          }}\n        >\n          <h3>\n            {selectedOrder[currentIndex].type === 'task'\n              ? `Task: ${selectedOrder[currentIndex].title}`\n              : `Break: ${selectedOrder[currentIndex].title}`}\n          </h3>\n          <h1 style={{ fontSize: 90, margin: '20px 0' }}>{formatTime(seconds)}</h1>\n          <p>Step {currentIndex + 1} of {selectedOrder.length}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WorkSession;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}