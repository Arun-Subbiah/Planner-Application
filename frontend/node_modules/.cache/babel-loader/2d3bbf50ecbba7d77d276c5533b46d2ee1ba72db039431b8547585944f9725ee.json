{"ast":null,"code":"var _jsxFileName = \"/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/Calendar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar({\n  tasks\n}) {\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth(); // 0-indexed (0 = Jan)\n\n  const dueColors = {\n    'due-today': '#ffcccc',\n    // light red\n    'due-soon': '#fff5cc',\n    // light yellow\n    'due-later': '#d4edda' // light green\n  };\n  const getDueClass = dueDateStr => {\n    if (!dueDateStr) return '';\n    const today = new Date();\n    const due = new Date(dueDateStr);\n    today.setHours(0, 0, 0, 0);\n    due.setHours(0, 0, 0, 0);\n    const diff = (due - today) / (1000 * 60 * 60 * 24);\n    if (diff < 0) return 'due-today'; // overdue treated as today\n    if (diff === 0) return 'due-today';\n    if (diff <= 3) return 'due-soon';\n    return 'due-later';\n  };\n  const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay(); // 0 = Sunday\n\n  // Group tasks by dueDate (yyyy-mm-dd)\n  const tasksByDate = {};\n  tasks.forEach(task => {\n    if (!task.dueDate) return;\n    if (!tasksByDate[task.dueDate]) tasksByDate[task.dueDate] = [];\n    tasksByDate[task.dueDate].push(task);\n  });\n  const calendarDays = [];\n\n  // Empty cells for days before month start\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    calendarDays.push(/*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        border: '1px solid #ddd',\n        height: 100\n      }\n    }, `empty-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this));\n  }\n\n  // Cells for each day with tasks\n  for (let day = 1; day <= daysInMonth; day++) {\n    const dateObj = new Date(currentYear, currentMonth, day);\n    const dateStr = dateObj.toISOString().split('T')[0]; // yyyy-mm-dd\n    const dayTasks = tasksByDate[dateStr] || [];\n    calendarDays.push(/*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        verticalAlign: 'top',\n        border: '1px solid #ddd',\n        padding: 5,\n        height: 100,\n        width: 140\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          marginBottom: 6\n        },\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0,\n          margin: 0\n        },\n        children: dayTasks.map((task, index) => {\n          const dueClass = getDueClass(task.dueDate);\n          const bgColor = dueColors[dueClass] || '#eee';\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              backgroundColor: bgColor,\n              marginBottom: 4,\n              padding: '3px 6px',\n              borderRadius: 4,\n              fontSize: 14\n            },\n            children: task.title\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, dateStr, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this));\n  }\n\n  // Group days into weeks (7 days per row)\n  const rows = [];\n  for (let i = 0; i < calendarDays.length; i += 7) {\n    rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: calendarDays.slice(i, i + 7)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83D\\uDCC5 Calendar for \", today.toLocaleString('default', {\n        month: 'long'\n      }), \" \", currentYear]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse',\n        tableLayout: 'fixed'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Thu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Calendar","tasks","today","Date","currentYear","getFullYear","currentMonth","getMonth","dueColors","getDueClass","dueDateStr","due","setHours","diff","daysInMonth","getDate","firstDayOfMonth","getDay","tasksByDate","forEach","task","dueDate","push","calendarDays","i","style","border","height","fileName","_jsxFileName","lineNumber","columnNumber","day","dateObj","dateStr","toISOString","split","dayTasks","verticalAlign","padding","width","children","fontWeight","marginBottom","listStyle","margin","map","index","dueClass","bgColor","backgroundColor","borderRadius","fontSize","title","rows","length","slice","toLocaleString","month","borderCollapse","tableLayout","_c","$RefreshReg$"],"sources":["/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/Calendar.js"],"sourcesContent":["import React from 'react';\n\nfunction Calendar({ tasks }) {\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth(); // 0-indexed (0 = Jan)\n\n  const dueColors = {\n    'due-today': '#ffcccc',  // light red\n    'due-soon': '#fff5cc',   // light yellow\n    'due-later': '#d4edda',  // light green\n  };\n\n  const getDueClass = (dueDateStr) => {\n    if (!dueDateStr) return '';\n    const today = new Date();\n    const due = new Date(dueDateStr);\n    today.setHours(0, 0, 0, 0);\n    due.setHours(0, 0, 0, 0);\n    const diff = (due - today) / (1000 * 60 * 60 * 24);\n\n    if (diff < 0) return 'due-today'; // overdue treated as today\n    if (diff === 0) return 'due-today';\n    if (diff <= 3) return 'due-soon';\n    return 'due-later';\n  };\n\n  const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay(); // 0 = Sunday\n\n  // Group tasks by dueDate (yyyy-mm-dd)\n  const tasksByDate = {};\n  tasks.forEach(task => {\n    if (!task.dueDate) return;\n    if (!tasksByDate[task.dueDate]) tasksByDate[task.dueDate] = [];\n    tasksByDate[task.dueDate].push(task);\n  });\n\n  const calendarDays = [];\n\n  // Empty cells for days before month start\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    calendarDays.push(<td key={`empty-${i}`} style={{ border: '1px solid #ddd', height: 100 }} />);\n  }\n\n  // Cells for each day with tasks\n  for (let day = 1; day <= daysInMonth; day++) {\n    const dateObj = new Date(currentYear, currentMonth, day);\n    const dateStr = dateObj.toISOString().split('T')[0]; // yyyy-mm-dd\n    const dayTasks = tasksByDate[dateStr] || [];\n\n    calendarDays.push(\n      <td key={dateStr} style={{ verticalAlign: 'top', border: '1px solid #ddd', padding: 5, height: 100, width: 140 }}>\n        <div style={{ fontWeight: 'bold', marginBottom: 6 }}>{day}</div>\n        <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>\n          {dayTasks.map((task, index) => {\n            const dueClass = getDueClass(task.dueDate);\n            const bgColor = dueColors[dueClass] || '#eee';\n\n            return (\n              <li\n                key={index}\n                style={{\n                  backgroundColor: bgColor,\n                  marginBottom: 4,\n                  padding: '3px 6px',\n                  borderRadius: 4,\n                  fontSize: 14,\n                }}\n              >\n                {task.title}\n              </li>\n            );\n          })}\n        </ul>\n      </td>\n    );\n  }\n\n  // Group days into weeks (7 days per row)\n  const rows = [];\n  for (let i = 0; i < calendarDays.length; i += 7) {\n    rows.push(<tr key={i}>{calendarDays.slice(i, i + 7)}</tr>);\n  }\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>📅 Calendar for {today.toLocaleString('default', { month: 'long' })} {currentYear}</h2>\n      <table style={{ width: '100%', borderCollapse: 'collapse', tableLayout: 'fixed' }}>\n        <thead>\n          <tr>\n            <th>Sun</th><th>Mon</th><th>Tue</th><th>Wed</th>\n            <th>Thu</th><th>Fri</th><th>Sat</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}