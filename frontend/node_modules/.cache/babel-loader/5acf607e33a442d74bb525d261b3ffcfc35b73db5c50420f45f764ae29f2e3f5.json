{"ast":null,"code":"var _jsxFileName = \"/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/WorkSession.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WorkSession({\n  tasks = []\n}) {\n  _s();\n  const [selectedOrder, setSelectedOrder] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [newBreakDuration, setNewBreakDuration] = useState(5);\n  const toggleTask = task => {\n    const alreadySelected = selectedOrder.find(item => item.type === 'task' && item.id === task.id);\n    if (alreadySelected) {\n      setSelectedOrder(prev => prev.filter(item => !(item.type === 'task' && item.id === task.id)));\n    } else {\n      setSelectedOrder(prev => [...prev, {\n        ...task,\n        type: 'task'\n      }]);\n    }\n  };\n  const addBreakAfter = index => {\n    const breakItem = {\n      type: 'break',\n      title: `${newBreakDuration}-minute break`,\n      minutes: newBreakDuration\n    };\n    const updated = [...selectedOrder];\n    updated.splice(index + 1, 0, breakItem);\n    setSelectedOrder(updated);\n  };\n  const startSession = () => {\n    if (selectedOrder.length === 0) return;\n    setIsRunning(true);\n    setCurrentIndex(0);\n    setSeconds(selectedOrder[0].minutes * 60);\n  };\n  useEffect(() => {\n    if (!isRunning) return;\n    const interval = setInterval(() => {\n      setSeconds(prev => {\n        if (prev <= 1) {\n          clearInterval(interval);\n          if (currentIndex + 1 < selectedOrder.length) {\n            const next = selectedOrder[currentIndex + 1];\n            setCurrentIndex(i => i + 1);\n            setSeconds(next.minutes * 60);\n          } else {\n            setIsRunning(false);\n            setCurrentIndex(0);\n            setSeconds(0);\n          }\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isRunning, seconds, currentIndex, selectedOrder]);\n  const formatTime = s => {\n    const m = Math.floor(s / 60);\n    const sec = s % 60;\n    return `${m}:${sec.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Work Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), !isRunning && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          margin: '5px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedOrder.some(item => item.type === 'task' && item.id === task.id),\n          onChange: () => toggleTask(task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), task.title, \" (\", task.minutes, \" min)\"]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: 20\n        },\n        children: \"Session Order:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedOrder.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.type === 'task' ? `${item.title}` : `️ ${item.title}`, ' ', item.minutes, \" min\", item.type === 'task' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addBreakAfter(i),\n            style: {\n              marginLeft: 10\n            },\n            children: \"+ Add Break After\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Break duration (min):\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newBreakDuration,\n            onChange: e => setNewBreakDuration(Number(e.target.value)),\n            min: 1,\n            style: {\n              width: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: 20\n        },\n        onClick: startSession,\n        children: \"Start Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isRunning && selectedOrder[currentIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedOrder[currentIndex].type === 'task' ? `Task: ${selectedOrder[currentIndex].title}` : `Break: ${selectedOrder[currentIndex].title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: formatTime(seconds)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Step \", currentIndex + 1, \" of \", selectedOrder.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkSession, \"3BRSh/5t27LnFln7QbjbGuf0gyg=\");\n_c = WorkSession;\nexport default WorkSession;\nvar _c;\n$RefreshReg$(_c, \"WorkSession\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkSession","tasks","_s","selectedOrder","setSelectedOrder","isRunning","setIsRunning","currentIndex","setCurrentIndex","seconds","setSeconds","newBreakDuration","setNewBreakDuration","toggleTask","task","alreadySelected","find","item","type","id","prev","filter","addBreakAfter","index","breakItem","title","minutes","updated","splice","startSession","length","interval","setInterval","clearInterval","next","i","formatTime","s","m","Math","floor","sec","toString","padStart","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","display","margin","checked","some","onChange","marginTop","onClick","marginLeft","value","e","Number","target","min","width","_c","$RefreshReg$"],"sources":["/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/WorkSession.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction WorkSession({ tasks = [] }) {\n  const [selectedOrder, setSelectedOrder] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [newBreakDuration, setNewBreakDuration] = useState(5);\n\n  const toggleTask = (task) => {\n    const alreadySelected = selectedOrder.find(item => item.type === 'task' && item.id === task.id);\n    if (alreadySelected) {\n      setSelectedOrder(prev => prev.filter(item => !(item.type === 'task' && item.id === task.id)));\n    } else {\n      setSelectedOrder(prev => [...prev, { ...task, type: 'task' }]);\n    }\n  };\n\n  const addBreakAfter = (index) => {\n    const breakItem = {\n      type: 'break',\n      title: `${newBreakDuration}-minute break`,\n      minutes: newBreakDuration,\n    };\n    const updated = [...selectedOrder];\n    updated.splice(index + 1, 0, breakItem);\n    setSelectedOrder(updated);\n  };\n\n  const startSession = () => {\n    if (selectedOrder.length === 0) return;\n    setIsRunning(true);\n    setCurrentIndex(0);\n    setSeconds(selectedOrder[0].minutes * 60);\n  };\n\n  useEffect(() => {\n    if (!isRunning) return;\n\n    const interval = setInterval(() => {\n      setSeconds(prev => {\n        if (prev <= 1) {\n          clearInterval(interval);\n          if (currentIndex + 1 < selectedOrder.length) {\n            const next = selectedOrder[currentIndex + 1];\n            setCurrentIndex(i => i + 1);\n            setSeconds(next.minutes * 60);\n          } else {\n            setIsRunning(false);\n            setCurrentIndex(0);\n            setSeconds(0);\n          }\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [isRunning, seconds, currentIndex, selectedOrder]);\n\n  const formatTime = (s) => {\n    const m = Math.floor(s / 60);\n    const sec = s % 60;\n    return `${m}:${sec.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Work Session</h2>\n\n      {!isRunning && (\n        <>\n          <h3>Select Tasks:</h3>\n          {tasks.map(task => (\n            <label key={task.id} style={{ display: 'block', margin: '5px 0' }}>\n              <input\n                type=\"checkbox\"\n                checked={selectedOrder.some(item => item.type === 'task' && item.id === task.id)}\n                onChange={() => toggleTask(task)}\n              />\n              {task.title} ({task.minutes} min)\n            </label>\n          ))}\n\n          <h4 style={{ marginTop: 20 }}>Session Order:</h4>\n          <ul>\n            {selectedOrder.map((item, i) => (\n              <li key={i}>\n                {item.type === 'task' ? `${item.title}` : `️ ${item.title}`}\n                {' '}\n                {item.minutes} min\n                {item.type === 'task' && (\n                  <button\n                    onClick={() => addBreakAfter(i)}\n                    style={{ marginLeft: 10 }}\n                  >\n                    + Add Break After\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n\n          <div style={{ marginTop: 10 }}>\n            <label>\n              Break duration (min):{' '}\n              <input\n                type=\"number\"\n                value={newBreakDuration}\n                onChange={e => setNewBreakDuration(Number(e.target.value))}\n                min={1}\n                style={{ width: 50 }}\n              />\n            </label>\n          </div>\n\n          <button style={{ marginTop: 20 }} onClick={startSession}>\n            Start Session\n          </button>\n        </>\n      )}\n\n      {isRunning && selectedOrder[currentIndex] && (\n        <div>\n          <h3>\n            {selectedOrder[currentIndex].type === 'task'\n              ? `Task: ${selectedOrder[currentIndex].title}`\n              : `Break: ${selectedOrder[currentIndex].title}`}\n          </h3>\n          <h1>{formatTime(seconds)}</h1>\n          <p>Step {currentIndex + 1} of {selectedOrder.length}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WorkSession;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}