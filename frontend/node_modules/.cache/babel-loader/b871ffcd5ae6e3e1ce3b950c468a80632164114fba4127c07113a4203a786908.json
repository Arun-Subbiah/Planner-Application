{"ast":null,"code":"var _jsxFileName = \"/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/Calendar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar({\n  tasks\n}) {\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth(); // 0-indexed (0 = Jan)\n\n  const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay(); // 0 = Sunday\n\n  // Group tasks by dueDate\n  const tasksByDate = {};\n  tasks.forEach(task => {\n    const date = task.dueDate;\n    if (!tasksByDate[date]) tasksByDate[date] = [];\n    tasksByDate[date].push(task);\n  });\n  const calendarDays = [];\n\n  // Fill empty cells before the 1st of the month\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    calendarDays.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }, this));\n  }\n\n  // Fill in days with task data\n  for (let day = 1; day <= daysInMonth; day++) {\n    const dateStr = new Date(currentYear, currentMonth, day).toISOString().split('T')[0]; // yyyy-mm-dd\n    const dayTasks = tasksByDate[dateStr] || [];\n    calendarDays.push(/*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        verticalAlign: 'top',\n        padding: 10,\n        border: '1px solid #ccc',\n        height: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0,\n          margin: 0\n        },\n        children: dayTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            fontSize: 12,\n            background: '#eef',\n            marginTop: 4,\n            padding: 2,\n            borderRadius: 4\n          },\n          children: task.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, day, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this));\n  }\n\n  // Group into weeks (7 days per row)\n  const rows = [];\n  for (let i = 0; i < calendarDays.length; i += 7) {\n    rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: calendarDays.slice(i, i + 7)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83D\\uDCC5 Calendar for \", today.toLocaleString('default', {\n        month: 'long'\n      }), \" \", currentYear]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Thu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Calendar","tasks","today","Date","currentYear","getFullYear","currentMonth","getMonth","daysInMonth","getDate","firstDayOfMonth","getDay","tasksByDate","forEach","task","date","dueDate","push","calendarDays","i","fileName","_jsxFileName","lineNumber","columnNumber","day","dateStr","toISOString","split","dayTasks","style","verticalAlign","padding","border","height","children","listStyle","margin","map","index","fontSize","background","marginTop","borderRadius","title","rows","length","slice","toLocaleString","month","width","borderCollapse","_c","$RefreshReg$"],"sources":["/Users/arunsubbiah/Desktop/taskManager/frontend/src/components/Calendar.js"],"sourcesContent":["import React from 'react';\n\nfunction Calendar({ tasks }) {\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth(); // 0-indexed (0 = Jan)\n\n  const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay(); // 0 = Sunday\n\n  // Group tasks by dueDate\n  const tasksByDate = {};\n  tasks.forEach(task => {\n    const date = task.dueDate;\n    if (!tasksByDate[date]) tasksByDate[date] = [];\n    tasksByDate[date].push(task);\n  });\n\n  const calendarDays = [];\n\n  // Fill empty cells before the 1st of the month\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    calendarDays.push(<td key={`empty-${i}`} />);\n  }\n\n  // Fill in days with task data\n  for (let day = 1; day <= daysInMonth; day++) {\n    const dateStr = new Date(currentYear, currentMonth, day).toISOString().split('T')[0]; // yyyy-mm-dd\n    const dayTasks = tasksByDate[dateStr] || [];\n\n    calendarDays.push(\n      <td key={day} style={{ verticalAlign: 'top', padding: 10, border: '1px solid #ccc', height: 100 }}>\n        <strong>{day}</strong>\n        <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>\n          {dayTasks.map((task, index) => (\n            <li key={index} style={{ fontSize: 12, background: '#eef', marginTop: 4, padding: 2, borderRadius: 4 }}>\n              {task.title}\n            </li>\n          ))}\n        </ul>\n      </td>\n    );\n  }\n\n  // Group into weeks (7 days per row)\n  const rows = [];\n  for (let i = 0; i < calendarDays.length; i += 7) {\n    rows.push(<tr key={i}>{calendarDays.slice(i, i + 7)}</tr>);\n  }\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>ðŸ“… Calendar for {today.toLocaleString('default', { month: 'long' })} {currentYear}</h2>\n      <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n        <thead>\n          <tr>\n            <th>Sun</th><th>Mon</th><th>Tue</th><th>Wed</th>\n            <th>Thu</th><th>Fri</th><th>Sat</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}